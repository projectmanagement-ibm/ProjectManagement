<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Deploying an internal container registry with Minikube add-ons</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/cY5dQAWMCyw/" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="minikube" scheme="searchisko:content:tags" /><category term="registry" scheme="searchisko:content:tags" /><author><name>Kamesh Sampath</name></author><id>searchisko:content:id:jbossorg_blog-deploying_an_internal_container_registry_with_minikube_add_ons</id><updated>2019-07-11T07:00:14Z</updated><published>2019-07-11T07:00:14Z</published><content type="html">&lt;p&gt;&lt;a href="https://github.com/kubernetes/minikube"&gt;Minikube&lt;/a&gt; has a feature called &lt;a href="https://github.com/kubernetes/minikube/blob/master/docs/addons.md"&gt;add-ons,&lt;/a&gt; which help in adding extra components and features to Minikube’s Kubernetes cluster.&lt;/p&gt; &lt;p&gt;The &lt;em&gt;registry&lt;/em&gt; add-on will deploy an internal registry, which can then be used to push and pull Linux container images. But at times, we might wish to mimic push and pull to different registries (i.e., using aliases for container registry). In this article, I will walk you through the steps required to achieve the same.&lt;span id="more-608717"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2 id="what-do-i-need"&gt;What do we need?&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Minikube, preferred version is v1.1.1&lt;/li&gt; &lt;li&gt;Git to clone the sources&lt;/li&gt; &lt;li&gt;&lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/"&gt;kubectl&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/ahmetb/kubectx/blob/master/kubens"&gt;kubens&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/tektoncd/cli"&gt;tkn CLI&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id="what-we-will-do"&gt;What we will do?&lt;/h2&gt; &lt;p&gt;As part of this exercise we will:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Enable registry via Minikube add-on.&lt;/li&gt; &lt;li&gt;Update the Minikube node’s etc/hosts for the domains dev.local, example.com to resolve to the internal registry.&lt;/li&gt; &lt;li&gt;Update CoreDNS to rules that will allow pods to push images( typical case of CI/CD) to the registry using aliases.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id="deploy-container-registry"&gt;Deploy container registry&lt;/h2&gt; &lt;p&gt;As described previously, we can use Minikube add-ons to deploy and enable the internal registry. The internal registry by default gets deployed in &lt;code&gt;kube-system&lt;/code&gt; namespace.&lt;/p&gt; &lt;pre&gt;minikube profile demo minikube start -p demo --memory=8192 --cpus=6 --disk-size=50g&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you like to use &lt;a href="https://cri-o.io/"&gt;cri-o&lt;/a&gt;, then adjust the above command to be like:&lt;/p&gt; &lt;pre&gt;minikube profile demo minikube start -p demo --memory=8192 --cpus=6 --container-runtime=crio &lt;/pre&gt; &lt;p&gt;With Minikube running, the next step is to deploy the registry.&lt;/p&gt; &lt;pre&gt;minikube addons enable registry&lt;/pre&gt; &lt;p&gt;Once the registry is enabled, you will see a registry pod &lt;code&gt;kubectl -n kube-system get pod&lt;/code&gt; and a corresponding service &lt;code&gt;kubectl -n kube-system get svc&lt;/code&gt; in the kube-system namespace.&lt;/p&gt; &lt;p&gt;The &lt;a href="https://github.com/kameshsampath/minikube-helpers"&gt;minkube-helper&lt;/a&gt; repo in GitHub has the sources along with the example application to test the configuration. Clone the sources and navigate to the &lt;code&gt;registry&lt;/code&gt; sub-folder. For easier reference, we will call the sources folder as $PROJECT_HOME:&lt;/p&gt; &lt;pre&gt;git clone https://github.com/kameshsampath/minikube-helpers &amp;#38;&amp;#38; \ cd minikube-helpers/registry&lt;/pre&gt; &lt;h2 id="creating-aliases-configmap"&gt;Create aliases ConfigMap&lt;/h2&gt; &lt;p&gt;The alias names that we want to use for the registry are configured via the ConfigMap, called &lt;code&gt;registry-aliases&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;apiVersion: v1 data: # Add additonal hosts seperated by new-line registryAliases: &amp;#62;- dev.local example.com # default registry address in minikube when enabled via minikube addons enable registry registrySvc: registry.kube-system.svc.cluster.local kind: ConfigMap metadata: name: registry-aliases namespace: kube-system &lt;/pre&gt; &lt;pre&gt;kubectl apply -f registry-aliases-config.yaml&lt;/pre&gt; &lt;h2 id="update-minikube-etchosts-file"&gt;Update Minikube /etc/hosts file&lt;/h2&gt; &lt;p&gt;To make the aliases resolve to the &lt;code&gt;registry&lt;/code&gt; service in &lt;code&gt;kube-system&lt;/code&gt; namespace, we need to add the aliases entries in the Minkube VM’s &lt;code&gt;/etc/hosts&lt;/code&gt; file. We will use &lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"&gt;DaemonSet&lt;/a&gt; to update the &lt;code&gt;etc/hosts&lt;/code&gt; file inside the Minikube VM.&lt;/p&gt; &lt;pre&gt;kubectl apply -f node-etc-hosts-update.yaml&lt;/pre&gt; &lt;p&gt;As it will take few minutes for the DaemonSet to be running, you can watch the status using the command:&lt;/p&gt; &lt;pre&gt;kubectl -n kube-system get pods --watch&lt;/pre&gt; &lt;p&gt;Once the DaemonSet is successfully running, you can check the Minkube VM&amp;#8217;s &lt;code&gt;/etc/hosts&lt;/code&gt; file, which will now be updated to point to CLUSTER-IP of the registry service.&lt;/p&gt; &lt;pre&gt;minikube ssh -- cat /etc/hosts&lt;/pre&gt; &lt;h3&gt;Tips&lt;/h3&gt; &lt;ul&gt; &lt;li style="text-align: left;"&gt;You can use &lt;span class="keycombo"&gt;CTRL+C&lt;/span&gt; to terminate the watch.&lt;/li&gt; &lt;li style="text-align: left;"&gt;You can check the CLUSTER-IP of the &lt;code&gt;registry&lt;/code&gt; service using the command &lt;code&gt;kubectl -n kube-system get svc registry -o jsonpath='{.spec.clusterIP}'&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id="patching-coredns"&gt;Patch CoreDNS&lt;/h2&gt; &lt;p&gt;The configurations and other settings we applied in the previous section are good enough for the container runtime to push and pull the images. A typical CI/CD scenario will be something like a Kubernetes pod doing a build, e.g., Jenkins, Tekton and pushing the container image to the registry post as part of the pipeline.&lt;/p&gt; &lt;p&gt;To make the pod resolve the aliases like dev.local, example.com, we need to have the &lt;a href="https://coredns.io/"&gt;CoreDNS&lt;/a&gt; rules configured. For our alias configuration to work, we will use the CoreDNS &lt;a href="https://coredns.io/plugins/rewrite/"&gt;rewrite&lt;/a&gt; rules.&lt;/p&gt; &lt;p&gt;Running the following command will have the CoreDNS patched with the rewrite rules.&lt;/p&gt; &lt;pre&gt;./patch-coredns.sh&lt;/pre&gt; &lt;p&gt;The CoreDNS patch can be queried to see the updates. A successful update will show output for the command &lt;code&gt;kubectl -n kube-sytem configmap coredns -oyaml&lt;/code&gt; as shown below:&lt;/p&gt; &lt;pre&gt;apiVersion: v1 data: Corefile: |- .:53 { errors health rewrite name dev.local registry.kube-system.svc.cluster.local rewrite name example.com registry.kube-system.svc.cluster.local kubernetes cluster.local in-addr.arpa ip6.arpa { pods insecure upstream fallthrough in-addr.arpa ip6.arpa } prometheus :9153 forward . /etc/resolv.conf cache 30 loop reload loadbalance } kind: ConfigMap metadata: name: coredns namespace: kube-system&lt;/pre&gt; &lt;h2 id="testing-the-configuration"&gt;Test the configuration&lt;/h2&gt; &lt;p&gt;I found the real need of this registry hack was when I was trying to deploy &lt;a href="https://github.com/tektoncd/pipeline"&gt;Tekton pipelines&lt;/a&gt;. Tekton is Kubernetes&amp;#8217; native way of declaring CI/CD pipelines.&lt;/p&gt; &lt;p&gt;As part of my pipeline (see &lt;a href="https://github.com/kameshsampath/minikube-helpers/tree/master/registry/example"&gt;example&lt;/a&gt;), I want to build and deploy a simple Hello World application.&lt;/p&gt; &lt;h2 id="deploy-tekton-pipelines"&gt;Deploy Tekton pipelines&lt;/h2&gt; &lt;pre&gt;kubectl apply --filename https://storage.googleapis.com/tekton-releases/latest/release.yaml&lt;/pre&gt; &lt;p&gt;The status of Tekton pipelines can be watched using:&lt;/p&gt; &lt;pre&gt;kubectl get pods --namespace tekton-pipelines -w&lt;/pre&gt; &lt;h2 id="deploy-application-pipeline"&gt;Deploy application pipeline&lt;/h2&gt; &lt;pre&gt;kubectl apply -f https://raw.githubusercontent.com/tektoncd/catalog/master/golang/build.yaml \ --filename example/build.yaml&lt;/pre&gt; &lt;p&gt;As it will take some time for the pipeline to complete, you can watch the status using the command:&lt;/p&gt; &lt;pre&gt;tkn taskrun logs -f -a hello-world&lt;/pre&gt; &lt;p&gt;A successful pipeline build will have the Hello World application deployed. You can use the following Minikube shortcut:&lt;/p&gt; &lt;pre&gt;curl $(minikube service helloworld --url)&lt;/pre&gt; &lt;p&gt;to call the service, which returns a “Hello World” as the response.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When you see &lt;code&gt;tkn logs -f -a hello-world&lt;/code&gt; showing a blank screen, it might be that it&amp;#8217;s pulling the required images. To know what&amp;#8217;s happening, you can use &lt;code&gt;kubectl get events -w&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;I hope this article will help with similar development environment use cases that you might have. Next time, we will take a deep dive into Tekton. Until then, happy Kubernetes hacking!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#38;linkname=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#38;linkname=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#38;linkname=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#38;linkname=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#38;linkname=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#38;linkname=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#38;linkname=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#038;title=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" data-a2a-url="https://developers.redhat.com/blog/2019/07/11/deploying-an-internal-container-registry-with-minikube-add-ons/" data-a2a-title="Deploying an internal container registry with Minikube add-ons"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/11/deploying-an-internal-container-registry-with-minikube-add-ons/"&gt;Deploying an internal container registry with Minikube add-ons&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/cY5dQAWMCyw" height="1" width="1" alt=""/&gt;</content><summary>Minikube has a feature called add-ons, which help in adding extra components and features to Minikube’s Kubernetes cluster. The registry add-on will deploy an internal registry, which can then be used to push and pull Linux container images. But at times, we might wish to mimic push and pull to different registries (i.e., using aliases for container registry). In this article, I will walk you thro...</summary><dc:creator>Kamesh Sampath</dc:creator><dc:date>2019-07-11T07:00:14Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/07/11/deploying-an-internal-container-registry-with-minikube-add-ons/</feedburner:origLink></entry><entry><title>Welcome IBM to the Red Hat/JBoss family</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/tD-7vKyivJU/welcome-ibm-to-the-red-hatjboss-family" /><category term="feed_group_name_management" scheme="searchisko:content:tags" /><category term="feed_name_marklittle" scheme="searchisko:content:tags" /><category term="ibm" scheme="searchisko:content:tags" /><author><name>Mark Little</name></author><id>searchisko:content:id:jbossorg_blog-welcome_ibm_to_the_red_hat_jboss_family</id><updated>2019-07-10T12:17:22Z</updated><published>2019-07-10T12:17:00Z</published><content type="html">&lt;!-- [DocumentBodyStart:3d66ca01-d343-4159-8c0a-629cade1b4c2] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;It's been quite a hectic time since the original announcement in 2018 that IBM was to acquire Red Hat. &lt;a class="jive-link-external-small" href="http://markclittle.blogspot.com/2018/10/red-hat-and-ibm-really.html" rel="nofollow"&gt;I wrote about this&lt;/a&gt; on my personal blog at the time. I know this has pleased some, confused others, worried people and probably a lot more emotions than that affected yet more. In the meantime both Red Hat and IBM have had to act as independent companies for legal reasons and it's only now that the deal has closed can we really start to collaborate on next steps. However, many of our teams have been working with IBM over the years and have great relationships already as well as agreement on many things around strategy and vision. I'm confident that those things won't diminish now we are part of Red Hat (or, as I prefer to think of it, IBM is part of the JBoss family!) In fact they're more likely to improve. Whether it's in our upstream communities, the IBM upstream communities, with partners, customers, standards bodies etc. I'm confident that we will grow together and the potential for this combination of Red Hat and IBM is definitely an example of where the sum is greater than the individual parts!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;I really don't have much more to say at the moment. I know many people may still be concerned. All I can say is please trust us/me. We didn't enter into this lightly but I'm sure it's the right thing for us to have done and by that I absolutely mean it's the right thing for our communities too. It's going to be a heck of a ride over the coming months and year; I absolutely want to share that ride with all of you because only together can we make it a success!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Onward!&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:3d66ca01-d343-4159-8c0a-629cade1b4c2] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/tD-7vKyivJU" height="1" width="1" alt=""/&gt;</content><summary>It's been quite a hectic time since the original announcement in 2018 that IBM was to acquire Red Hat. I wrote about this on my personal blog at the time. I know this has pleased some, confused others, worried people and probably a lot more emotions than that affected yet more. In the meantime both Red Hat and IBM have had to act as independent companies for legal reasons and it's only now that th...</summary><dc:creator>Mark Little</dc:creator><dc:date>2019-07-10T12:17:00Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/mark.little/2019/07/10/welcome-ibm-to-the-red-hatjboss-family</feedburner:origLink></entry><entry><title>Developer preview of Debezium Apache Kafka connectors for Change Data Capture (CDC)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/sBfUBDWqDQk/" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Database" scheme="searchisko:content:tags" /><category term="debezium" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="jboss a-mq" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><author><name>Hugo Guerrero</name></author><id>searchisko:content:id:jbossorg_blog-developer_preview_of_debezium_apache_kafka_connectors_for_change_data_capture_cdc</id><updated>2019-07-10T07:01:50Z</updated><published>2019-07-10T07:01:50Z</published><content type="html">&lt;p&gt;With the release of &lt;a href="https://developers.redhat.com/blog/2019/07/04/announcing-red-hat-amq-streams-1-2-with-apache-kafka-2-2-support/"&gt;Red Hat AMQ Streams 1.2&lt;/a&gt;, &lt;a href="https://www.redhat.com/en/topics/integration/what-is-integration"&gt;Red Hat Integration&lt;/a&gt; now includes a developer preview of Change Data Capture (CDC) capabilities to enable data integration for modern cloud-native microservices-based applications. CDC features are based on the upstream project &lt;a href="https://debezium.io/"&gt;Debezium&lt;/a&gt; and are natively integrated with Apache Kafka and Strimzi to run on top of &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift Container Platform&lt;/a&gt;, the enterprise Kubernetes, as part of the AMQ Streams release.&lt;br /&gt; &lt;span id="more-610857"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;What is Change Data Capture (CDC)?&lt;/h2&gt; &lt;p&gt;Change Data Capture, or CDC, is an old software design pattern for a system that monitors and captures the changes in data so that other software can respond to those changes. Often used in data-warehousing solutions to react to OLTP data changes, CDC has had a rebirth in the microservices architecture as part of a distributed data integration approach.&lt;/p&gt; &lt;p&gt;When running in a container environment, CDC captures row-level changes to a database table and passes corresponding change events to a data streaming bus. Applications can read these &lt;i&gt;change event streams&lt;/i&gt; and access the change events in the order in which they occurred.&lt;/p&gt; &lt;p&gt;The primary use of CDC is to enable applications to respond almost immediately whenever data in databases change. Applications can do anything with the insert, update, and delete events, including:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Streamlining data integration and data replication&lt;/li&gt; &lt;li&gt;Cache invalidation and feeding full-text search indexes&lt;/li&gt; &lt;li&gt;Extracting microservices out of simplifying monolithic applications&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;What is Debezium?&lt;/h2&gt; &lt;p&gt;Debezium is a set of distributed services that captures row-level changes in your databases so that your applications can see and respond to those changes. Debezium records all row-level changes committed to each database table in a transaction log. Applications simply read the transaction logs they&amp;#8217;re interested in and see all of the events in the order in which they occurred. Debezium is durable and fast, so apps can respond quickly and never miss an event, even when things go wrong.&lt;/p&gt; &lt;p&gt;Debezium provides connectors for monitoring the following databases:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/download-manager/file/debezium-connector-mysql-0.10.0.Beta2-redhat-00001-plugin.zip"&gt;MySQL Connector&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/download-manager/file/debezium-connector-postgres-0.10.0.Beta2-redhat-00001-plugin.zip"&gt;PostgreSQL Connector&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/download-manager/file/debezium-connector-mongodb-0.10.0.Beta2-redhat-00001-plugin.zip"&gt;MongoDB Connector&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/download-manager/file/debezium-connector-sqlserver-0.10.0.Beta2-redhat-00001-plugin.zip"&gt;SQL Server Connector&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Debezium connectors record all events to a Red Hat AMQ streams Kafka cluster, and applications consume those events through AMQ streams. Debezium uses the Apache Kafka Connect framework making all of Debezium’s connectors, Kafka Connector source connectors, and, as such, they can be deployed and managed using the AMQ streams Kafka Connect resources.&lt;/p&gt; &lt;h2&gt;Red Hat Integration&lt;/h2&gt; &lt;p&gt;Red Hat Integration’s Debezium CDC Apache Kafka connectors are available as a developer preview today as part of&lt;a href="https://www.redhat.com/en/topics/integration/what-is-integration"&gt; Red Hat integration&lt;/a&gt;. For customers embracing a cloud-native development model, Red Hat offers a full portfolio of technologies that enable them to&lt;a href="https://www.redhat.com/en/technologies/cloud-computing/openshift/application-runtimes"&gt; build microservices-based applications&lt;/a&gt;,&lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/amq"&gt; exchange information synchronously or asynchronously&lt;/a&gt; between them,&lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/fuse"&gt; integrate them with legacy systems&lt;/a&gt;, and run them on an&lt;a href="https://www.openshift.com/"&gt; industry-leading enterprise container and Kubernetes application platform&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In case of any requests or questions related to running the Debezium Developer Preview with Red Hat AMQ Streams on OpenShift, please let us know by sending an email to &lt;a href="mailto:debezium-cdc-preview@redhat.com"&gt;debezium-cdc-preview&lt;/a&gt; mailing list. For more information on Debezium and AMQ streams, see &lt;a href="https://debezium.io/docs/amq-streams/"&gt;https://debezium.io/docs/amq-streams/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fdeveloper-preview-of-debezium-apache-kafka-connectors-for-change-data-capture-cdc%2F&amp;#38;linkname=Developer%20preview%20of%20Debezium%20Apache%20Kafka%20connectors%20for%20Change%20Data%20Capture%20%28CDC%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fdeveloper-preview-of-debezium-apache-kafka-connectors-for-change-data-capture-cdc%2F&amp;#38;linkname=Developer%20preview%20of%20Debezium%20Apache%20Kafka%20connectors%20for%20Change%20Data%20Capture%20%28CDC%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fdeveloper-preview-of-debezium-apache-kafka-connectors-for-change-data-capture-cdc%2F&amp;#38;linkname=Developer%20preview%20of%20Debezium%20Apache%20Kafka%20connectors%20for%20Change%20Data%20Capture%20%28CDC%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fdeveloper-preview-of-debezium-apache-kafka-connectors-for-change-data-capture-cdc%2F&amp;#38;linkname=Developer%20preview%20of%20Debezium%20Apache%20Kafka%20connectors%20for%20Change%20Data%20Capture%20%28CDC%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fdeveloper-preview-of-debezium-apache-kafka-connectors-for-change-data-capture-cdc%2F&amp;#38;linkname=Developer%20preview%20of%20Debezium%20Apache%20Kafka%20connectors%20for%20Change%20Data%20Capture%20%28CDC%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fdeveloper-preview-of-debezium-apache-kafka-connectors-for-change-data-capture-cdc%2F&amp;#38;linkname=Developer%20preview%20of%20Debezium%20Apache%20Kafka%20connectors%20for%20Change%20Data%20Capture%20%28CDC%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fdeveloper-preview-of-debezium-apache-kafka-connectors-for-change-data-capture-cdc%2F&amp;#38;linkname=Developer%20preview%20of%20Debezium%20Apache%20Kafka%20connectors%20for%20Change%20Data%20Capture%20%28CDC%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fdeveloper-preview-of-debezium-apache-kafka-connectors-for-change-data-capture-cdc%2F&amp;#038;title=Developer%20preview%20of%20Debezium%20Apache%20Kafka%20connectors%20for%20Change%20Data%20Capture%20%28CDC%29" data-a2a-url="https://developers.redhat.com/blog/2019/07/10/developer-preview-of-debezium-apache-kafka-connectors-for-change-data-capture-cdc/" data-a2a-title="Developer preview of Debezium Apache Kafka connectors for Change Data Capture (CDC)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/10/developer-preview-of-debezium-apache-kafka-connectors-for-change-data-capture-cdc/"&gt;Developer preview of Debezium Apache Kafka connectors for Change Data Capture (CDC)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/sBfUBDWqDQk" height="1" width="1" alt=""/&gt;</content><summary>With the release of Red Hat AMQ Streams 1.2, Red Hat Integration now includes a developer preview of Change Data Capture (CDC) capabilities to enable data integration for modern cloud-native microservices-based applications. CDC features are based on the upstream project Debezium and are natively integrated with Apache Kafka and Strimzi to run on top of Red Hat OpenShift Container Platform, the en...</summary><dc:creator>Hugo Guerrero</dc:creator><dc:date>2019-07-10T07:01:50Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/07/10/developer-preview-of-debezium-apache-kafka-connectors-for-change-data-capture-cdc/</feedburner:origLink></entry><entry><title>Improving ASP.NET Core build speed on Red Hat OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zWVHatY54ys/" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><author><name>Tom Deseyn</name></author><id>searchisko:content:id:jbossorg_blog-improving_asp_net_core_build_speed_on_red_hat_openshift</id><updated>2019-07-10T07:00:22Z</updated><published>2019-07-10T07:00:22Z</published><content type="html">&lt;p&gt;In previous articles, I’ve covered two strategies for improving &lt;a href="https://developers.redhat.com/products/dotnet/overview"&gt;.NET Core&lt;/a&gt; build speed on &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift&lt;/a&gt; by reducing time to restore dependencies: &lt;a href="https://developers.redhat.com/blog/2019/01/08/local-nuget-server-red-hat-openshift-container-platform/"&gt;adding a local NuGet server&lt;/a&gt; and &lt;a href="https://developers.redhat.com/blog/2019/04/08/reduce-application-image-build-times-with-net-core-incremental-builds/"&gt;using incremental builds&lt;/a&gt;. In this article, I’ll look at another strategy: using a custom base image that has includes the dependencies.&lt;span id="more-608007"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;ASP.NET Core&lt;/h2&gt; &lt;p&gt;&lt;a href="https://dotnet.microsoft.com/learn/web/what-is-aspnet"&gt;ASP.NET Core&lt;/a&gt; is the de facto framework for building web applications with .NET Core. The framework is open source on GitHub; however, for 1.x and 2.x, it does not have the infrastructure needed for a third party (e.g., Red Hat) to build it from source so that it matches Microsoft releases.&lt;/p&gt; &lt;p&gt;Building from source is a key feature for open source projects. It reduces &lt;a href="https://en.wikipedia.org/wiki/Vendor_lock-in"&gt;vendor lock-in&lt;/a&gt; by enabling other companies and communities to build and support the software. The ability to build code from source is a requirement for including packages in the default package repositories of Linux distributions (like Fedora, Debian, and Ubuntu). The upcoming ASP.NET Core 3.0 will be buildable from source!&lt;/p&gt; &lt;p&gt;Because ASP.NET Core 2.x cannot be built from source, it cannot be included in Red Hat Enterprise Linux packages and Red Hat OpenShift’s .NET Core builder (&lt;code&gt;s2i-dotnetcore&lt;/code&gt;). This leads to long restore times because applications need to fetch and extract those packages from nuget.org (or a local NuGet server).&lt;/p&gt; &lt;h2&gt;aspnet image streams&lt;/h2&gt; &lt;p&gt;As a Red Hat OpenShift user, to work around this limitation, you can build a custom image that includes the ASP.NET Core NuGet packages. I’ve written a resource file that does exactly that. You can import it into OpenShift using:&lt;/p&gt; &lt;pre&gt;$ oc create -f https://raw.githubusercontent.com/redhat-developer/s2i-dotnetcore/master/templates/aspnet-2.x.json &lt;/pre&gt; &lt;p&gt;If you have a look into the file, you’ll see it defines an &lt;code&gt;aspnet:2.1&lt;/code&gt; and &lt;code&gt;aspnet:2.2&lt;/code&gt; image stream that builds on top of &lt;code&gt;s2i-dotnetcore&lt;/code&gt;’s &lt;code&gt;dotnet:2.1&lt;/code&gt; and &lt;code&gt;dotnet:2.2&lt;/code&gt; using a &lt;code&gt;Docker&lt;/code&gt; strategy. The ASP.NET Core packages are added by performing a &lt;code&gt;dotnet new web&lt;/code&gt;. Because we build on top of the &lt;code&gt;dotnet&lt;/code&gt; image streams, the &lt;code&gt;aspnet&lt;/code&gt; streams will automatically be rebuilt when the base images are updated with security patches.&lt;/p&gt; &lt;p&gt;After importing the file, it takes a couple of minutes for the images to be built.&lt;/p&gt; &lt;p&gt;Let’s compare the difference in build speed by building &lt;a href="https://github.com/redhat-developer/s2i-dotnetcore-ex"&gt;https://github.com/redhat-developer/s2i-dotnetcore-ex&lt;/a&gt; using &lt;code&gt;dotnet:2.2&lt;/code&gt; and &lt;code&gt;aspnet:2.2&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;$ oc new-app --name=dotnetapp dotnet:2.2~https://github.com/redhat-developer/s2i-dotnetcore-ex#dotnetcore-2.2 --build-env DOTNET_STARTUP_PROJECT=app $ oc new-app --name=aspnetapp aspnet:2.2~https://github.com/redhat-developer/s2i-dotnetcore-ex#dotnetcore-2.2 --build-env DOTNET_STARTUP_PROJECT=app &lt;/pre&gt; &lt;p&gt;When we do five builds, we get these build times:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;base image&lt;/th&gt; &lt;th&gt;min&lt;/th&gt; &lt;th&gt;max&lt;/th&gt; &lt;th&gt;avg&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;dotnet:2.1&lt;/td&gt; &lt;td&gt;43s&lt;/td&gt; &lt;td&gt;1m30s&lt;/td&gt; &lt;td&gt;47s&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;aspnet:2.1&lt;/td&gt; &lt;td&gt;23s&lt;/td&gt; &lt;td&gt;31s&lt;/td&gt; &lt;td&gt;24s&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;As you can see, the build times are halved using the &lt;code&gt;aspnet&lt;/code&gt; image. What’s more, the build time variance is much smaller.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;We can significantly reduce build times for .NET Core applications by creating a custom build image that includes common dependencies. &lt;a href="https://raw.githubusercontent.com/redhat-developer/s2i-dotnetcore/master/templates/aspnet-2.x.json"&gt;aspnet-2.x.json&lt;/a&gt; provides build configurations that add ASP.NET 2.x Core packages to the &lt;code&gt;s2i-dotnetcore&lt;/code&gt; &lt;code&gt;dotnet&lt;/code&gt; images.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fimproving-asp-net-core-build-speed-on-red-hat-openshift%2F&amp;#38;linkname=Improving%20ASP.NET%20Core%20build%20speed%20on%20Red%20Hat%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fimproving-asp-net-core-build-speed-on-red-hat-openshift%2F&amp;#38;linkname=Improving%20ASP.NET%20Core%20build%20speed%20on%20Red%20Hat%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fimproving-asp-net-core-build-speed-on-red-hat-openshift%2F&amp;#38;linkname=Improving%20ASP.NET%20Core%20build%20speed%20on%20Red%20Hat%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fimproving-asp-net-core-build-speed-on-red-hat-openshift%2F&amp;#38;linkname=Improving%20ASP.NET%20Core%20build%20speed%20on%20Red%20Hat%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fimproving-asp-net-core-build-speed-on-red-hat-openshift%2F&amp;#38;linkname=Improving%20ASP.NET%20Core%20build%20speed%20on%20Red%20Hat%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fimproving-asp-net-core-build-speed-on-red-hat-openshift%2F&amp;#38;linkname=Improving%20ASP.NET%20Core%20build%20speed%20on%20Red%20Hat%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fimproving-asp-net-core-build-speed-on-red-hat-openshift%2F&amp;#38;linkname=Improving%20ASP.NET%20Core%20build%20speed%20on%20Red%20Hat%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F10%2Fimproving-asp-net-core-build-speed-on-red-hat-openshift%2F&amp;#038;title=Improving%20ASP.NET%20Core%20build%20speed%20on%20Red%20Hat%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2019/07/10/improving-asp-net-core-build-speed-on-red-hat-openshift/" data-a2a-title="Improving ASP.NET Core build speed on Red Hat OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/10/improving-asp-net-core-build-speed-on-red-hat-openshift/"&gt;Improving ASP.NET Core build speed on Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zWVHatY54ys" height="1" width="1" alt=""/&gt;</content><summary>In previous articles, I’ve covered two strategies for improving .NET Core build speed on Red Hat OpenShift by reducing time to restore dependencies: adding a local NuGet server and using incremental builds. In this article, I’ll look at another strategy: using a custom base image that has includes the dependencies. ASP.NET Core ASP.NET Core is the de facto framework for building web applications w...</summary><dc:creator>Tom Deseyn</dc:creator><dc:date>2019-07-10T07:00:22Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/07/10/improving-asp-net-core-build-speed-on-red-hat-openshift/</feedburner:origLink></entry><entry><title>Beginners Guide - Building an Online Retail Web Shop Workshop (Domain Specific Language)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/UoVNGHNk7iY/beginners-guide-building-an-online-retail-web-shop-workshop-domain-specific-language.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="Decision Manager" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="workshops" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-beginners_guide_building_an_online_retail_web_shop_workshop_domain_specific_language</id><updated>2019-07-10T07:37:33Z</updated><published>2019-07-10T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/lab01.html" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img alt="beginners guide red hat decision manager" border="0" data-original-height="843" data-original-width="1600" height="168" src="https://1.bp.blogspot.com/-cR3PsiJzOsk/XQuCt-IFI6I/AAAAAAAAvKM/NeGXvos8ok845AeXO5Dv-7LHFOwkWBOUgCLcBGAs/s320/Screenshot%2B2019-06-20%2Bat%2B14.49.30.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;With the release of Red Hat Decision Manager 7.3 I've started updating my free online workshop, a beginners guide to building an online retail web shop.&lt;br /&gt;&lt;br /&gt;The previous article covered &lt;a href="http://www.schabell.org/2019/07/beginners-guide-building-an-online-retail-web-shop-workshop-domain-model.html" target="_blank"&gt;creating a domain model for your online retail web shop.&lt;/a&gt;. This update is the for the fourth lab in this workshop, with more to follow. Learn how to&amp;nbsp;create a domain specific language or DSL with Red Hat Decision Manager.&lt;br /&gt;&lt;br /&gt;Below you'll find the embedded lab slides with all the instructions you need.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Create a domain model&lt;/h3&gt;In&amp;nbsp;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/lab04.html#/" target="_blank"&gt;lab 4 get hands-on creating&amp;nbsp;a domain specific language&lt;/a&gt;&amp;nbsp;in Red Hat Decision Manager:&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allowfullscreen="" frameborder="0" height="380" marginheight="0" marginwidth="0" scrolling="no" src="https://bpmworkshop.gitlab.io/rhdm/lab04.html#/" style="border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;" width="660"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;Next up in this workshop, create guided rules.&lt;br /&gt;&lt;br /&gt;For more beginners guide workshops &lt;a href="https://bpmworkshop.gitlab.io/#/" target="_blank"&gt;please explore here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=U_9n_b5v8Z0:B57tpHPt4dc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=U_9n_b5v8Z0:B57tpHPt4dc:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=U_9n_b5v8Z0:B57tpHPt4dc:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=U_9n_b5v8Z0:B57tpHPt4dc:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=U_9n_b5v8Z0:B57tpHPt4dc:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=U_9n_b5v8Z0:B57tpHPt4dc:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=U_9n_b5v8Z0:B57tpHPt4dc:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=U_9n_b5v8Z0:B57tpHPt4dc:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=U_9n_b5v8Z0:B57tpHPt4dc:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=U_9n_b5v8Z0:B57tpHPt4dc:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=U_9n_b5v8Z0:B57tpHPt4dc:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/U_9n_b5v8Z0" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/UoVNGHNk7iY" height="1" width="1" alt=""/&gt;</content><summary>With the release of Red Hat Decision Manager 7.3 I've started updating my free online workshop, a beginners guide to building an online retail web shop. The previous article covered creating a domain model for your online retail web shop.. This update is the for the fourth lab in this workshop, with more to follow. Learn how to create a domain specific language or DSL with Red Hat Decision Manager...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-07-10T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/U_9n_b5v8Z0/beginners-guide-building-an-online-retail-web-shop-workshop-domain-specific-language.html</feedburner:origLink></entry><entry><title>Preserving the Red Hat developer experience</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/fg_cAofZ5Ks/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="developer" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="ibm" scheme="searchisko:content:tags" /><author><name>Brad Micklea</name></author><id>searchisko:content:id:jbossorg_blog-preserving_the_red_hat_developer_experience</id><updated>2019-07-09T12:36:51Z</updated><published>2019-07-09T12:36:51Z</published><content type="html">&lt;p&gt;&lt;em&gt;Editor’s note: Today, &lt;a href="https://www.redhat.com/en/about/press-releases/ibm-closes-landmark-acquisition-red-hat-34-billion-defines-open-hybrid-cloud-future"&gt;we announced the close of Red Hat&amp;#8217;s acquisition by IBM&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;In the months since the Red Hat acquisition by IBM was announced, I have been asked numerous times if this deal changes things for Red Hat’s Developer Program and Developer Tools group.&lt;/p&gt; &lt;p&gt;My answer then and now is “no.”&lt;/p&gt; &lt;p&gt;&lt;span id="more-607567"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;As has been stated elsewhere, &lt;a href="https://www.redhat.com/en/blog/jim-whitehurst-email-red-hatters-red-hat-ibm-acquisition-closing"&gt;Red Hat will remain independent&lt;/a&gt; because IBM appreciates our unswerving dedication to open source, our open culture, and our neutrality. Neither IBM nor Red Hat has any desire to change these foundational values.&lt;/p&gt; &lt;p&gt;My group, which covers developer evangelism, the developer program and our developer tools, will remain independent from IBM’s developer group. This means that…&lt;/p&gt; &lt;ul&gt; &lt;li&gt;You’ll still bump into our fantastic Red Hat developer relations team at events, meetups and keynotes (if you see Burr Sutter, ask him how much goes into our live cross-portfolio Red Hat Summit &lt;a href="https://youtu.be/FUu4kMc0PL8?t=5781"&gt;demos&lt;/a&gt;!)&lt;/li&gt; &lt;li&gt;The &lt;a href="https://developers.redhat.com/"&gt;Red Hat Developer program&lt;/a&gt;—including the site, blog, and our social media channels—will remain independent.&lt;/li&gt; &lt;li&gt;If you’re a member of the Developer program, you’ll continue to enjoy free access to Red Hat software downloads, eBooks, events and great content.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you’re not yet a member, please check out the Developer program at &lt;a href="http://developers.redhat.com"&gt;developers.redhat.com&lt;/a&gt;. By signing up you will receive our newsletter, which will keep you up to date as we move forward.&lt;/p&gt; &lt;p&gt;I also invite you to check out the &lt;a href="https://developer.ibm.com/"&gt;IBM Developer Program&lt;/a&gt;, which includes great additional developer content and events. If you’re a member of the Red Hat Developer program and want to take advantage of the IBM Developer Program, you’ll have to sign up separately, since we won’t be merging the two different programs.&lt;/p&gt; &lt;p&gt;As is true elsewhere in Red Hat, we are committed to an open development model and to maintaining a neutral market position. We collaborate across the industry, and that will not change. Our Red Hat Developer tool product roadmaps will continue to be independent of IBM.&lt;/p&gt; &lt;p&gt;Similarly, our tools mission is unchanged: to make development more efficient and enjoyable by:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Working in open source communities for an improved developer experience.&lt;/li&gt; &lt;li&gt;Improving the tools that developers already use for today’s evolving applications.&lt;/li&gt; &lt;li&gt;Making it a joy to develop applications, functions and services with Kubernetes and OpenShift.&lt;/li&gt; &lt;li&gt;Bringing attention to innovative developer projects like Quarkus (which makes Java sing in a serverless deployment model) and Eclipse Che (the market’s first Kubernetes-native IDE).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;As part of this, we will continue to grow our Red Hat CodeReady tools portfolio and build on and add to our popular IDE plugins for Microsoft’s VS Code, Eclipse IDE and the JetBrains portfolio of IDEs including IntelliJ. These plugins span a variety of key technologies like Java, Apache Camel, Kubernetes YAML, JBoss and OpenShift.&lt;/p&gt; &lt;p&gt;I’m personally excited about this change. Over the past several decades, Red Hat and IBM have collaborated in many open source communities around Linux, Java, Eclipse IDE and now Kubernetes, Knative and Tekton. Long before the acquisition announcement, my team worked with IBM contributors on community projects for developers. My experience with the IBMers has shown them to be smart, collaborative and, most importantly, community-focused people. I’m looking forward to meeting more of them.&lt;/p&gt; &lt;p&gt;May all your PRs be merged!&lt;/p&gt; &lt;p&gt;&lt;em&gt;Brad Micklea is the senior director of Red Hat’s Developer Evangelism, Program and Tools Group&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;To learn more about what this acquisition means for the IBM Developer Program, check out &lt;/em&gt;&lt;a href="https://developer.ibm.com/open/redhat-ibm-open"&gt;&lt;em&gt;this blog&lt;/em&gt;&lt;/a&gt;&lt;em&gt; from Todd Moore, VP of Open Technology at IBM.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fpreserving-the-red-hat-developer-experience%2F&amp;#38;linkname=Preserving%20the%20Red%20Hat%20developer%20experience" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fpreserving-the-red-hat-developer-experience%2F&amp;#38;linkname=Preserving%20the%20Red%20Hat%20developer%20experience" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fpreserving-the-red-hat-developer-experience%2F&amp;#38;linkname=Preserving%20the%20Red%20Hat%20developer%20experience" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fpreserving-the-red-hat-developer-experience%2F&amp;#38;linkname=Preserving%20the%20Red%20Hat%20developer%20experience" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fpreserving-the-red-hat-developer-experience%2F&amp;#38;linkname=Preserving%20the%20Red%20Hat%20developer%20experience" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fpreserving-the-red-hat-developer-experience%2F&amp;#38;linkname=Preserving%20the%20Red%20Hat%20developer%20experience" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fpreserving-the-red-hat-developer-experience%2F&amp;#38;linkname=Preserving%20the%20Red%20Hat%20developer%20experience" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fpreserving-the-red-hat-developer-experience%2F&amp;#038;title=Preserving%20the%20Red%20Hat%20developer%20experience" data-a2a-url="https://developers.redhat.com/blog/2019/07/09/preserving-the-red-hat-developer-experience/" data-a2a-title="Preserving the Red Hat developer experience"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/09/preserving-the-red-hat-developer-experience/"&gt;Preserving the Red Hat developer experience&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/fg_cAofZ5Ks" height="1" width="1" alt=""/&gt;</content><summary>Editor’s note: Today, we announced the close of Red Hat’s acquisition by IBM. In the months since the Red Hat acquisition by IBM was announced, I have been asked numerous times if this deal changes things for Red Hat’s Developer Program and Developer Tools group. My answer then and now is “no.” As has been stated elsewhere, Red Hat will remain independent because IBM appreciates our unswerving ded...</summary><dc:creator>Brad Micklea</dc:creator><dc:date>2019-07-09T12:36:51Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/07/09/preserving-the-red-hat-developer-experience/</feedburner:origLink></entry><entry><title>API-first design with OpenAPI and Red Hat Fuse</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/XEQFWKorv-c/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="JBoss Fuse" scheme="searchisko:content:tags" /><category term="OpenAPI" scheme="searchisko:content:tags" /><category term="Red Hat Integration" scheme="searchisko:content:tags" /><category term="Swagger" scheme="searchisko:content:tags" /><author><name>Jacob Borella</name></author><id>searchisko:content:id:jbossorg_blog-api_first_design_with_openapi_and_red_hat_fuse</id><updated>2019-07-09T07:00:30Z</updated><published>2019-07-09T07:00:30Z</published><content type="html">&lt;p&gt;API-first design is a commonly used approach where you define the interfaces for your application before providing an actual implementation. This approach gives you a lot of benefits. For example, you can test whether your API has the right structure before investing a lot of time implementing it, and you can share your ideas with other teams early to get valuable feedback. Later in the process, delays in the back-end development will not affect front-end developers dependent on your service so much, because it&amp;#8217;s easy to create mock implementations of a service from the API definition.&lt;/p&gt; &lt;p&gt;Much has been written about the benefits of API-first design, so this article will instead focus on how to efficiently take an &lt;a href="https://swagger.io/docs/specification/about/"&gt;OpenAPI&lt;/a&gt; definition and bring it into code with &lt;a href="https://developers.redhat.com/products/fuse" target="_blank" rel="noopener noreferrer"&gt;Red Hat Fuse&lt;/a&gt;.&lt;span id="more-607657"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Imagine an API has been designed that is used for exposing a beer API. As you can see in the &lt;a href="https://github.com/microcks/api-lifecycle/blob/master/beer-catalog-demo/api-contracts/beer-catalog-api-swagger.json" target="_blank" rel="noopener noreferrer"&gt;JSON file describing the API&lt;/a&gt;, it&amp;#8217;s an &lt;a href="https://www.openapis.org/" target="_blank" rel="noopener noreferrer"&gt;OpenAPI&lt;/a&gt; definition and each operation is identified by an &lt;em&gt;operationId&lt;/em&gt;. That will prove to be handy when doing the actual implementation. The API is pretty simple and consists of three operations:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GetBeer—Get a beer by name.&lt;/li&gt; &lt;li&gt;FindBeersByStatus—Find a beer by its status.&lt;/li&gt; &lt;li&gt;ListBeers—Get all beers in the database.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Keep generated code separate from the implementation&lt;/h2&gt; &lt;p&gt;We don’t want to code all the DTOs and boilerplate code, because that’s very time-consuming and trivial as well. Therefore, we&amp;#8217;ll use the &lt;a href="https://github.com/apache/camel/blob/master/tooling/maven/camel-restdsl-swagger-plugin/src/main/docs/camel-restdsl-swagger-plugin.adoc" target="_blank" rel="noopener noreferrer"&gt;Camel REST DSL Swagger Maven Plugin&lt;/a&gt; for generating all of that.&lt;/p&gt; &lt;p&gt;We want to keep the code generated by the swagger plugin separate from our implementation for several reasons, including:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Code generation consumes time and resources. Separating code generation from compiling allows us to spend less time waiting and thus more time drinking coffee with colleagues and being creative in all sorts of ways.&lt;/li&gt; &lt;li&gt;We don&amp;#8217;t have to worry that a developer will accidentally put some implementation stuff in an autogenerated class and thus lose valuable work the next time the stub is regenerated. Of course, we have everything under version control, but it&amp;#8217;s still time-consuming to resolve what was done, moving code, etc.&lt;/li&gt; &lt;li&gt;Other projects can refer to the generated artifacts independently of the implementation.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To keep the generated stub separate from the implementation, we have the following initial structure:&lt;/p&gt; &lt;pre&gt;. +-- README.md │-- fuse-impl │   +-- pom.xml │   `-- src │   │-- main │   │   │-- java │   │   `-- resources │   `-- test │   │-- java │   `-- resources `-- stub │-- pom.xml `-- src `-- spec &lt;/pre&gt; &lt;p&gt;The folder &lt;code&gt;stub&lt;/code&gt; contains the project for the generated artifacts. The folder &lt;code&gt;fuse-impl&lt;/code&gt; contains our implementation of the actual service.&lt;/p&gt; &lt;h2&gt;Setting up code generation with Swagger&lt;/h2&gt; &lt;p&gt;First, configure the Swagger plugin by adding the following in the &lt;code&gt;pom.xml&lt;/code&gt; file for the stub project:&lt;/p&gt; &lt;pre&gt;… &amp;#60;dependencies&amp;#62; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;org.apache.camel&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;camel-swagger-java-starter&amp;#60;/artifactId&amp;#62; &amp;#60;/dependency&amp;#62; … &amp;#60;/dependencies&amp;#62; … &amp;#60;plugins&amp;#62; &amp;#60;plugin&amp;#62; &amp;#60;groupId&amp;#62;org.apache.camel&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;camel-restdsl-swagger-plugin&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;2.23.0&amp;#60;/version&amp;#62; &amp;#60;executions&amp;#62; &amp;#60;execution&amp;#62; &amp;#60;goals&amp;#62; &amp;#60;goal&amp;#62;generate-xml-with-dto&amp;#60;/goal&amp;#62;&amp;#60;!-- 1 --&amp;#62; &amp;#60;/goals&amp;#62; &amp;#60;/execution&amp;#62; &amp;#60;/executions&amp;#62; &amp;#60;configuration&amp;#62; &amp;#60;specificationUri&amp;#62;&amp;#60;!-- 2 --&amp;#62; ${project.basedir}/src/spec/beer-catalog-API.json &amp;#60;/specificationUri&amp;#62; &amp;#60;fileName&amp;#62;camel-rest.xml&amp;#60;/fileName&amp;#62;&amp;#60;!-- 3 --&amp;#62; &amp;#60;outputDirectory&amp;#62;&amp;#60;!-- 4 --&amp;#62; ${project.build.directory}/generated-sources/src/main/resources/camel-rest &amp;#60;/outputDirectory&amp;#62; &amp;#60;modelOutput&amp;#62; ${project.build.directory}/generated-sources &amp;#60;/modelOutput&amp;#62; &amp;#60;modelPackage&amp;#62;com.example.beer.dto&amp;#60;/modelPackage&amp;#62;&amp;#60;!-- 5 --&amp;#62; &amp;#60;/configuration&amp;#62; &amp;#60;/plugin&amp;#62; &amp;#60;/plugins&amp;#62; ... &lt;/pre&gt; &lt;p&gt;The plugin is pretty easy to configure:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;The goal is set to &lt;code&gt;generate-xml-with-dto&lt;/code&gt;, which means that a rest DSL XML file is generated from the definition together with my Data Transfer Objects. There are other options, including one to generate a Java client for the interface.&lt;/li&gt; &lt;li&gt;&lt;code&gt;specificationUri&lt;/code&gt; points to the location of my API definition.&lt;/li&gt; &lt;li&gt;The name of the rest DSL XML file to generate.&lt;/li&gt; &lt;li&gt;Where to output the generated rest DSL XML file. If placed in this location, Camel will automatically pick it up if included in a project.&lt;/li&gt; &lt;li&gt;Package name for the DTOs.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;In &lt;code&gt;pom.xml&lt;/code&gt;, we also need to change the location of the source and resource files for the compiler. Finally, we need to copy the API specification to the location we chose previously. This isn&amp;#8217;t described here because it&amp;#8217;s known stuff, but you can refer to the &lt;a href="https://github.com/rh-demos/apicurio-fuse" target="_blank" rel="noopener noreferrer"&gt;source code&lt;/a&gt; for the specifics as needed. Now, we&amp;#8217;re ready to generate the stub for the REST service.&lt;/p&gt; &lt;p&gt;So far, we have the following file structure in the &lt;code&gt;stub&lt;/code&gt; project:&lt;/p&gt; &lt;pre&gt;. `-- stub +-- pom.xml `-- src `-- spec `-- beer-catalog-API.json &lt;/pre&gt; &lt;p&gt;Run &lt;code&gt;mvn install&lt;/code&gt; in the &lt;code&gt;stub&lt;/code&gt; dir and the stub is automatically generated, compiled, put in a jar file, and put into the local Maven repository. The DTOs are generated in the package we chose previously. Furthermore, an XML file is created for the REST endpoint.&lt;/p&gt; &lt;p&gt;Contents of file &lt;code&gt;stub/target/generated-sources/src/main/resources/camel-rest/camel-rest.xml&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&amp;#60;?xml version="1.0" encoding="UTF-8" standalone="yes"?&amp;#62; &amp;#60;rests xmlns="http://camel.apache.org/schema/spring"&amp;#62; &amp;#60;restConfiguration component="servlet"/&amp;#62; &amp;#60;rest&amp;#62; &amp;#60;get id="GetBeer" uri="/beer/{name}"&amp;#62; &amp;#60;description&amp;#62;Get beer having name&amp;#60;/description&amp;#62; &amp;#60;param dataType="string" description="Name of beer to retrieve" name="name" required="true" type="path"/&amp;#62; &amp;#60;to uri="direct:GetBeer"/&amp;#62; &amp;#60;/get&amp;#62; &amp;#60;get id="FindBeersByStatus" uri="/beer/findByStatus/{status}"&amp;#62; &amp;#60;description&amp;#62;Get beers having status&amp;#60;/description&amp;#62; &amp;#60;param dataType="string" description="Status of beers to retrieve" name="status" required="true" type="path"/&amp;#62; &amp;#60;param dataType="number" description="Number of page to retrieve" name="page" required="false" type="query"/&amp;#62; &amp;#60;to uri="direct:FindBeersByStatus"/&amp;#62; &amp;#60;/get&amp;#62; &amp;#60;get id="ListBeers" uri="/beer"&amp;#62; &amp;#60;description&amp;#62;List beers within catalog&amp;#60;/description&amp;#62; &amp;#60;param dataType="number" description="Number of page to retrieve" name="page" required="false" type="query"/&amp;#62; &amp;#60;to uri="direct:ListBeers"/&amp;#62; &amp;#60;/get&amp;#62; &amp;#60;/rest&amp;#62; &amp;#60;/rests&amp;#62; &lt;/pre&gt; &lt;p&gt;The important thing to note is that each REST operation is routing to a &lt;code&gt;uri&lt;/code&gt; named &lt;code&gt;direct:operatorId&lt;/code&gt;, where &lt;code&gt;operatorId&lt;/code&gt; is the same operator as in the API definition file. This enables us to easily provide an implementation for each operation.&lt;/p&gt; &lt;h2&gt;Providing an implementation of the API&lt;/h2&gt; &lt;p&gt;For the example implementation, we chose Fuse running in a &lt;a href="https://developers.redhat.com/node/208305/"&gt;Spring Boot&lt;/a&gt; container to make it easily deployable in &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Besides the usual boilerplate code, the only thing we have to do is add a dependency to the project containing the stub in our &lt;code&gt;pom.xml&lt;/code&gt; file of the &lt;code&gt;fuse-impl&lt;/code&gt; project:&lt;/p&gt; &lt;pre&gt; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;com.example&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;beer&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;1.0&amp;#60;/version&amp;#62; &amp;#60;/dependency&amp;#62; &lt;/pre&gt; &lt;p&gt;Now we&amp;#8217;re all set, and we can provide our implementation of the three operations. As an example of an implementation, consider the following.&lt;/p&gt; &lt;p&gt;Contents of &lt;code&gt;fuse-impl/src/main/java/com/example/beer/routes/GetBeerByNameRoute.java:&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;package com.example.beer.routes; import org.apache.camel.Exchange; import org.apache.camel.Processor; import org.apache.camel.builder.RouteBuilder; import org.apache.camel.model.dataformat.JsonLibrary; import org.springframework.stereotype.Component; import java.math.BigDecimal; import com.example.beer.service.BeerService; import com.example.beer.dto.Beer; import org.apache.camel.BeanInject; @Component public class GetBeerByNameRoute extends RouteBuilder { @BeanInject private BeerService mBeerService; @Override public void configure() throws Exception { from("direct:GetBeer").process(new Processor() { @Override public void process(Exchange exchange) throws Exception { String name = exchange.getIn().getHeader("name", String.class); if (name == null) { throw new IllegalArgumentException("must provide a name"); } Beer b = mBeerService.getBeerByName(name); exchange.getIn().setBody(b == null ? new Beer() : b); } }).marshal().json(JsonLibrary.Jackson); } } &lt;/pre&gt; &lt;p&gt;Here we inject a &lt;code&gt;BeerService&lt;/code&gt;, which holds information about the different beers. Then we define a direct endpoint, which provides the endpoint, to which the REST call is routed (remember the &lt;code&gt;operationId&lt;/code&gt; mentioned earlier?). The processor tries to look up the beer. If no beer is found, an empty beer object is returned. To try the example, you can run:&lt;/p&gt; &lt;pre&gt;cd fuse-impl mvn package java -jar target/beer-svc-impl-1.0-SNAPSHOT.jar #in a separate terminal curl http://localhost:8080/rest/beer/Carlsberg {"name":"Carlsberg","country":"Denmark","type":"pilsner","rating":5,"status":"available"} &lt;/pre&gt; &lt;p&gt;We might have to do this over and over again. In that case, we can create a Maven archetype for the two projects. Alternatively, we can clone a template project containing all the boilerplate code and do the necessary changes from there. That will be a bit more work, though, because we&amp;#8217;ll have to rename Maven modules as well as Java classes, but it&amp;#8217;s not too much of a hassle.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;With an API-first approach, you can design and test your API before doing the actual implementation. You can get early feedback on your API from the people using it, without having to provide an actual implementation. In this way, you can save time and money.&lt;/p&gt; &lt;p&gt;Going from design to actual implementation is easy with &lt;a href="https://developers.redhat.com/products/fuse" target="_blank" rel="noopener noreferrer"&gt;Red Hat Fuse&lt;/a&gt;. Just use the &lt;a href="https://github.com/apache/camel/blob/master/tooling/maven/camel-restdsl-swagger-plugin/src/main/docs/camel-restdsl-swagger-plugin.adoc" target="_blank" rel="noopener noreferrer"&gt;Camel REST DSL Swagger Maven Plugin&lt;/a&gt; to generate a stub and you are set for providing the actual implementation. If you want to try it for yourself, use the &lt;a href="https://github.com/rh-demos/apicurio-fuse" target="_blank" rel="noopener noreferrer"&gt;example code&lt;/a&gt; as a starting point.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fapi-first-design-with-openapi-and-red-hat-fuse%2F&amp;#38;linkname=API-first%20design%20with%20OpenAPI%20and%20Red%20Hat%20Fuse" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fapi-first-design-with-openapi-and-red-hat-fuse%2F&amp;#38;linkname=API-first%20design%20with%20OpenAPI%20and%20Red%20Hat%20Fuse" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fapi-first-design-with-openapi-and-red-hat-fuse%2F&amp;#38;linkname=API-first%20design%20with%20OpenAPI%20and%20Red%20Hat%20Fuse" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fapi-first-design-with-openapi-and-red-hat-fuse%2F&amp;#38;linkname=API-first%20design%20with%20OpenAPI%20and%20Red%20Hat%20Fuse" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fapi-first-design-with-openapi-and-red-hat-fuse%2F&amp;#38;linkname=API-first%20design%20with%20OpenAPI%20and%20Red%20Hat%20Fuse" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fapi-first-design-with-openapi-and-red-hat-fuse%2F&amp;#38;linkname=API-first%20design%20with%20OpenAPI%20and%20Red%20Hat%20Fuse" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fapi-first-design-with-openapi-and-red-hat-fuse%2F&amp;#38;linkname=API-first%20design%20with%20OpenAPI%20and%20Red%20Hat%20Fuse" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F09%2Fapi-first-design-with-openapi-and-red-hat-fuse%2F&amp;#038;title=API-first%20design%20with%20OpenAPI%20and%20Red%20Hat%20Fuse" data-a2a-url="https://developers.redhat.com/blog/2019/07/09/api-first-design-with-openapi-and-red-hat-fuse/" data-a2a-title="API-first design with OpenAPI and Red Hat Fuse"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/09/api-first-design-with-openapi-and-red-hat-fuse/"&gt;API-first design with OpenAPI and Red Hat Fuse&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/XEQFWKorv-c" height="1" width="1" alt=""/&gt;</content><summary>API-first design is a commonly used approach where you define the interfaces for your application before providing an actual implementation. This approach gives you a lot of benefits. For example, you can test whether your API has the right structure before investing a lot of time implementing it, and you can share your ideas with other teams early to get valuable feedback. Later in the process, d...</summary><dc:creator>Jacob Borella</dc:creator><dc:date>2019-07-09T07:00:30Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/07/09/api-first-design-with-openapi-and-red-hat-fuse/</feedburner:origLink></entry><entry><title>10 tips for reviewing code you don’t like</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/DX9GlSJUS0M/" /><category term="community" scheme="searchisko:content:tags" /><category term="developer" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="open source" scheme="searchisko:content:tags" /><category term="opinion" scheme="searchisko:content:tags" /><author><name>David Lloyd</name></author><id>searchisko:content:id:jbossorg_blog-10_tips_for_reviewing_code_you_don_t_like</id><updated>2019-07-08T12:07:44Z</updated><published>2019-07-08T12:07:44Z</published><content type="html">&lt;p&gt;As a frequent contributor to open source projects (both within and beyond Red Hat), I find one of the most common time-wasters is dealing with code reviews of my submitted code that are negative or obstructive and yet essentially subjective or argumentative in nature. I see this most often when submitting to projects where the maintainer doesn&amp;#8217;t like the change, for whatever reason. In the best case, this kind of code review strategy can lead to time wasted in pointless debates; at worst, it actively discourages contribution and diversity in a project and creates an environment that is hostile and elitist.&lt;/p&gt; &lt;p&gt;A code review should be objective and concise and should deal in certainties whenever possible. It&amp;#8217;s not a political or emotional argument; it&amp;#8217;s a technical one, and the goal should always be to move forward and elevate the project and its participants.  A change submission should always be evaluated on the merits of the submission, not on one&amp;#8217;s opinion of the submitter.&lt;span id="more-607517"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Code review strategies&lt;/h2&gt; &lt;p&gt;Here are several strategies to keep in mind when reviewing submissions that, for whatever reason, you (as a project maintainer) do not like:&lt;/p&gt; &lt;h3&gt;1. Rephrase your objection as a question&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Bad: &amp;#8220;This change will make XXX impossible.&amp;#8221; (This is hyperbole; is it &lt;em&gt;really&lt;/em&gt; impossible?)&lt;/li&gt; &lt;li&gt;Good: &amp;#8220;How can we do XXX with your change?&amp;#8221;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;2. Avoid hyperbole&lt;/h3&gt; &lt;p&gt;Simply state your concerns and ask questions to help get to the desired outcome.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Bad: &amp;#8220;This change will destroy performance.&amp;#8221;&lt;/li&gt; &lt;li&gt;Good: &amp;#8220;It seems like doing X might be slower than existing Y; have you measured/gathered data to show it isn&amp;#8217;t?&amp;#8221;&lt;/li&gt; &lt;li&gt;Better (if you have time): &amp;#8220;In the meantime, I am gathering data to try to verify that X is not slower than Y.&amp;#8221;&lt;/li&gt; &lt;li&gt;Also good: &amp;#8220;This change changes this single loop O(n) to a doubly nested loop O(n²); won&amp;#8217;t this affect performance?&amp;#8221;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;3. Keep snide comments to yourself&lt;/h3&gt; &lt;p&gt;Some thoughts are better kept to yourself. If you can&amp;#8217;t be civil, don&amp;#8217;t engage.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Bad: &amp;#8220;I think this change is bad and will ruin everything.&amp;#8221;&lt;/li&gt; &lt;li&gt;Bad: &amp;#8220;Are you sure that software engineering is the right career path for you?&amp;#8221;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;4. Engage positively&lt;/h3&gt; &lt;p&gt;Maybe you had a different idea about how to solve a problem? If you engage positively, you might end up discovering a solution that is better than either original option.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Bad: &amp;#8220;This change sucks, my version is better.&amp;#8221;&lt;/li&gt; &lt;li&gt;Good: &amp;#8220;I also have a similar change at this location XXX: maybe we can compare and/or combine ideas.&amp;#8221;&lt;/li&gt; &lt;li&gt;Also good: &amp;#8220;I have a similar change in progress, but I chose to do X because ZZZ; why did you choose Y?&amp;#8221;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;5. Remember that not everybody&amp;#8217;s experience is identical to yours&lt;/h3&gt; &lt;p&gt;An otherwise completely competent engineer could go for years without knowing some fact that you take as common sense. It&amp;#8217;s okay to state the obvious, as long as you aren&amp;#8217;t patronizing or snide about it.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Bad: &amp;#8220;Can&amp;#8217;t you see that this is obviously wrong?&amp;#8221;&lt;/li&gt; &lt;li&gt;Good: &amp;#8220;This is incorrect because it causes a null pointer exception when X is Y.&amp;#8221;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;6. Don&amp;#8217;t diminish the complexity of something that&amp;#8217;s not obvious&lt;/h3&gt; &lt;p&gt;Remember that things that are obvious to you may not be obvious to everyone. Suggesting alternative approaches and pointing out useful examples can help get everyone on the same page.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Bad: &amp;#8220;Why not simply frob the gnozzle?&amp;#8221;&lt;/li&gt; &lt;li&gt;Good: &amp;#8220;It might be possible to frob the gnozzle, which would simplify this part (see XXX for an example).&amp;#8221;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;7. Be respectful&lt;/h3&gt; &lt;p&gt;Sometimes a submission just doesn&amp;#8217;t meet a minimum standard for quality. It&amp;#8217;s okay to say so, but it doesn&amp;#8217;t cost anything extra to be respectful.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Bad: &amp;#8220;This is stupid code written by a stupid person.&amp;#8221;&lt;/li&gt; &lt;li&gt;Good: &amp;#8220;Thanks for your contribution. However, it cannot be accepted in its current form; there are multiple problems (as outlined above).&amp;#8221;&lt;/li&gt; &lt;li&gt;Also good: &amp;#8220;As outlined above, there are multiple problems with this submission.  Maybe we could back up a step and talk about the use cases instead?  That could help us find a path forward.&amp;#8221;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;8. Manage expectations (and your time)&lt;/h3&gt; &lt;p&gt;If a submission is too large to be reasonably reviewed, it is okay to let the submitter know right away. Keep moving forward.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Bad: &amp;#8220;I&amp;#8217;m not merging this, it&amp;#8217;s too big.&amp;#8221;&lt;/li&gt; &lt;li&gt;Also bad: Ignoring it until it goes away.&lt;/li&gt; &lt;li&gt;Good: &amp;#8220;Could you please break this down into smaller changes? I do not have a lot of time for code reviews and this one is just too large/complex to review in one pass.&amp;#8221;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;9. Say please&lt;/h3&gt; &lt;p&gt;Just saying &amp;#8220;please&amp;#8221; goes a long way toward showing that you respect the submitter&amp;#8217;s time, especially when you want something to be different due to formatting or style, which might seem to be a minor detail of the change. Examples:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&amp;#8220;Could you please separate the whitespace changes into another pull request?&amp;#8221;&lt;/li&gt; &lt;li&gt;&amp;#8220;Could you please align these variable definitions so they&amp;#8217;re easier to read?&amp;#8221;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;10. Start a conversation&lt;/h3&gt; &lt;p&gt;If, after all this, you still don&amp;#8217;t like something &lt;em&gt;but you&amp;#8217;re not sure why&lt;/em&gt;, you might have to just live with it. But it&amp;#8217;s also okay to say, &amp;#8220;I don&amp;#8217;t like this and I&amp;#8217;m not sure why, can we talk about it?&amp;#8221; It&amp;#8217;s a reasonable thing to ask, and even though it might take a little time, it&amp;#8217;s often worth the investment because now you have two people who are both learning (one by explaining and one by listening) rather than two people who are opposed to each other.&lt;/p&gt; &lt;p&gt;Even skilled and experienced engineers should be able to say &amp;#8220;I don&amp;#8217;t understand why I don&amp;#8217;t like this&amp;#8221;; it&amp;#8217;s not an invitation to attack the position of the reviewer but rather an honest quest for knowledge.&lt;/p&gt; &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;Avoid hyperbolic or bombastic assertions, avoid argument strategies, avoid elitist or demeaning language, and avoid constructs like &amp;#8220;obviously&amp;#8221; and &amp;#8220;why don&amp;#8217;t you just&amp;#8230;&amp;#8221;.  Use clear, factual statements and supportive language, ask questions, and move things forward.  Remember that coworkers and contributors are human people, and their time is worthy of the same respect as yours.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F08%2F10-tips-for-reviewing-code-you-dont-like%2F&amp;#38;linkname=10%20tips%20for%20reviewing%20code%20you%20don%E2%80%99t%20like" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F08%2F10-tips-for-reviewing-code-you-dont-like%2F&amp;#38;linkname=10%20tips%20for%20reviewing%20code%20you%20don%E2%80%99t%20like" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F08%2F10-tips-for-reviewing-code-you-dont-like%2F&amp;#38;linkname=10%20tips%20for%20reviewing%20code%20you%20don%E2%80%99t%20like" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F08%2F10-tips-for-reviewing-code-you-dont-like%2F&amp;#38;linkname=10%20tips%20for%20reviewing%20code%20you%20don%E2%80%99t%20like" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F08%2F10-tips-for-reviewing-code-you-dont-like%2F&amp;#38;linkname=10%20tips%20for%20reviewing%20code%20you%20don%E2%80%99t%20like" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F08%2F10-tips-for-reviewing-code-you-dont-like%2F&amp;#38;linkname=10%20tips%20for%20reviewing%20code%20you%20don%E2%80%99t%20like" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F08%2F10-tips-for-reviewing-code-you-dont-like%2F&amp;#38;linkname=10%20tips%20for%20reviewing%20code%20you%20don%E2%80%99t%20like" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F08%2F10-tips-for-reviewing-code-you-dont-like%2F&amp;#038;title=10%20tips%20for%20reviewing%20code%20you%20don%E2%80%99t%20like" data-a2a-url="https://developers.redhat.com/blog/2019/07/08/10-tips-for-reviewing-code-you-dont-like/" data-a2a-title="10 tips for reviewing code you don’t like"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/08/10-tips-for-reviewing-code-you-dont-like/"&gt;10 tips for reviewing code you don&amp;#8217;t like&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/DX9GlSJUS0M" height="1" width="1" alt=""/&gt;</content><summary>As a frequent contributor to open source projects (both within and beyond Red Hat), I find one of the most common time-wasters is dealing with code reviews of my submitted code that are negative or obstructive and yet essentially subjective or argumentative in nature. I see this most often when submitting to projects where the maintainer doesn’t like the change, for whatever reason. In the best ca...</summary><dc:creator>David Lloyd</dc:creator><dc:date>2019-07-08T12:07:44Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/07/08/10-tips-for-reviewing-code-you-dont-like/</feedburner:origLink></entry><entry><title>Beginners Guide - Building an Online Retail Web Shop Workshop (Domain Model)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/cnLgS1O7q6o/beginners-guide-building-an-online-retail-web-shop-workshop-domain-model.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="Decision Manager" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="workshops" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-beginners_guide_building_an_online_retail_web_shop_workshop_domain_model</id><updated>2019-07-10T07:37:22Z</updated><published>2019-07-08T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/lab01.html" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img alt="beginners guide red hat decision manager" border="0" data-original-height="843" data-original-width="1600" height="168" src="https://1.bp.blogspot.com/-cR3PsiJzOsk/XQuCt-IFI6I/AAAAAAAAvKM/NeGXvos8ok845AeXO5Dv-7LHFOwkWBOUgCLcBGAs/s320/Screenshot%2B2019-06-20%2Bat%2B14.49.30.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;With the release of Red Hat Decision Manager 7.3 I've started updating my free online workshop, a beginners guide to building an online retail web shop.&lt;br /&gt;&lt;br /&gt;The previous article covered &lt;a href="https://www.schabell.org/2019/06/beginners-guide-building-an-online-retail-web-shop-workshop.html" target="_blank"&gt;installing the tooling and setting up a project&lt;/a&gt;. This update is the for the third lab in this workshop, with more to follow. Learn how to&amp;nbsp;create a domain model with Red Hat Decision Manager.&lt;br /&gt;&lt;br /&gt;Below you'll find the embedded lab slides with all the instructions you need.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Create a domain model&lt;/h3&gt;In&amp;nbsp;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/lab03.html#/" target="_blank"&gt;lab 3 get hands-on creating&amp;nbsp;a domain model&lt;/a&gt;&amp;nbsp;in Red Hat Decision Manager:&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allowfullscreen="" frameborder="0" height="380" marginheight="0" marginwidth="0" scrolling="no" src="https://bpmworkshop.gitlab.io/rhdm/lab03.html#/" style="border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;" width="660"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;Next up in this workshop, create a domain specific model (DSL).&lt;br /&gt;&lt;br /&gt;For more beginners guide workshops &lt;a href="https://bpmworkshop.gitlab.io/#/" target="_blank"&gt;please explore here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=5Ev-oUM6hdI:fwbafl_hnPE:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=5Ev-oUM6hdI:fwbafl_hnPE:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=5Ev-oUM6hdI:fwbafl_hnPE:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=5Ev-oUM6hdI:fwbafl_hnPE:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=5Ev-oUM6hdI:fwbafl_hnPE:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=5Ev-oUM6hdI:fwbafl_hnPE:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=5Ev-oUM6hdI:fwbafl_hnPE:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=5Ev-oUM6hdI:fwbafl_hnPE:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=5Ev-oUM6hdI:fwbafl_hnPE:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=5Ev-oUM6hdI:fwbafl_hnPE:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=5Ev-oUM6hdI:fwbafl_hnPE:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/5Ev-oUM6hdI" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/cnLgS1O7q6o" height="1" width="1" alt=""/&gt;</content><summary>With the release of Red Hat Decision Manager 7.3 I've started updating my free online workshop, a beginners guide to building an online retail web shop. The previous article covered installing the tooling and setting up a project. This update is the for the third lab in this workshop, with more to follow. Learn how to create a domain model with Red Hat Decision Manager. Below you'll find the embed...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-07-08T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/5Ev-oUM6hdI/beginners-guide-building-an-online-retail-web-shop-workshop-domain-model.html</feedburner:origLink></entry><entry><title>JBoss Tools and Red Hat CodeReady Studio for Eclipse 2019-06</title><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/jbossbuzz/~3/pTGdBGk6__E/12.12.0.ga.html" /><category term="release" /><category term="jbosstools" /><category term="devstudio" /><category term="jbosscentral" /><category term="codereadystudio" /><author><name>jeffmaury</name></author><id>https://tools.jboss.org/blog/12.12.0.ga.html</id><updated>2019-07-09T14:20:23Z</updated><published>2019-07-08T00:00:00Z</published><content type="html">&lt;div&gt;&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://tools.jboss.org/downloads/jbosstools/2019-06/4.12.0.Final.html"&gt;JBoss Tools 4.12.0&lt;/a&gt; and &lt;a href="https://tools.jboss.org/downloads/devstudio/2019-06/12.12.0.GA.html"&gt;Red Hat CodeReady Studio 12.12&lt;/a&gt; for Eclipse 2019-06 are here waiting for you. Check it out!&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/blog/images/crstudio12.png" alt="crstudio12" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="installation"&gt;&lt;a class="anchor" href="#installation"&gt;&lt;/a&gt;Installation&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Red Hat CodeReady Studio comes with everything pre-bundled in its installer. Simply download it from our &lt;a href="https://developers.redhat.com/products/codeready-studio/overview/"&gt;Red Hat CodeReady product page&lt;/a&gt; and run it like this:&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;java -jar codereadystudio-&amp;lt;installername&amp;gt;.jar&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio require a bit more:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release requires at least Eclipse 4.12 (2019-06) but we recommend using the latest &lt;a href="http://www.eclipse.org/downloads/packages/release/2019-06/r/eclipse-ide-java-ee-developers"&gt;Eclipse 4.12 2019-06 JEE Bundle&lt;/a&gt; since then you get most of the dependencies preinstalled.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under &amp;quot;JBoss Tools&amp;quot; or &amp;quot;Red Hat CodeReady Studio&amp;quot;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For JBoss Tools, you can also use our update site directly.&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;http://download.jboss.org/jbosstools/photon/stable/updates/&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-new"&gt;&lt;a class="anchor" href="#what-is-new"&gt;&lt;/a&gt;What is new?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Our main focus for this release was improvements for container based development and bug fixing. Eclipse 2019-06 itself has a lot of new cool stuff but let me highlight just a few updates in both Eclipse 2019-06 and JBoss Tools plugins that I think are worth mentioning.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="openshift"&gt;&lt;a class="anchor" href="#openshift"&gt;&lt;/a&gt;OpenShift&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="openshift-container-platform-4-support"&gt;&lt;a class="anchor" href="#openshift-container-platform-4-support"&gt;&lt;/a&gt;OpenShift Container Platform 4 support&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;With the new OpenShift Container Platform (OCP) 4 now available (see this &lt;a href="https://www.redhat.com/en/about/press-releases/red-hat-redefines-enterprise-kubernetes-through-full-stack-automation-red-hat-openshift-4?source=pressreleaselisting" target="_blank"&gt;article&lt;/a&gt;), even if this is a major shift compared to OCP 3, JBoss Tools is compatible with this major release in a transparent way. Just define your connection to your OCP 4 based cluster as you did before for an OCP 3 cluster, and use the tooling !&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="server-tools"&gt;&lt;a class="anchor" href="#server-tools"&gt;&lt;/a&gt;Server tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="wildfly-17-server-adapter"&gt;&lt;a class="anchor" href="#wildfly-17-server-adapter"&gt;&lt;/a&gt;Wildfly 17 Server Adapter&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A server adapter has been added to work with Wildfly 17. It adds support for Java EE 8.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="hibernate-tools"&gt;&lt;a class="anchor" href="#hibernate-tools"&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="new-runtime-provider"&gt;&lt;a class="anchor" href="#new-runtime-provider"&gt;&lt;/a&gt;New Runtime Provider&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The new Hibernate 5.4 runtime provider has been added. It incorporates Hibernate Core version 5.4.3.Final and Hibernate Tools version 5.4.3.Final&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="runtime-provider-updates"&gt;&lt;a class="anchor" href="#runtime-provider-updates"&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.10.Final and Hibernate Tools version 5.3.10.Final.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="maven"&gt;&lt;a class="anchor" href="#maven"&gt;&lt;/a&gt;Maven&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="maven-support-updated-to-m2e-1-12"&gt;&lt;a class="anchor" href="#maven-support-updated-to-m2e-1-12"&gt;&lt;/a&gt;Maven support updated to M2E 1.12&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Maven support is based on Eclipse M2E 1.12&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="platform"&gt;&lt;a class="anchor" href="#platform"&gt;&lt;/a&gt;Platform&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="views-dialogs-and-toolbar"&gt;&lt;a class="anchor" href="#views-dialogs-and-toolbar"&gt;&lt;/a&gt;Views, Dialogs and Toolbar&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="import-project-by-passing-it-as-command-line-argument"&gt;&lt;a class="anchor" href="#import-project-by-passing-it-as-command-line-argument"&gt;&lt;/a&gt;Import project by passing it as command-line argument&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can import a project into Eclipse by passing its path as a parameter to the launcher. The command would look like &lt;code&gt;&lt;code&gt;eclipse /path/to/project&lt;/code&gt;&lt;/code&gt; on Linux and Windows, or &lt;code&gt;&lt;code&gt;open Eclipse.app -a /path/to/project&lt;/code&gt;&lt;/code&gt; on macOS.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/pass-directory-to-launcher.png" alt="pass directory to launcher" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="launch-run-and-debug-configurations-from-quick-access"&gt;&lt;a class="anchor" href="#launch-run-and-debug-configurations-from-quick-access"&gt;&lt;/a&gt;Launch Run and Debug configurations from Quick Access&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;From the &lt;strong&gt;Quick Access&lt;/strong&gt; proposals (accessible with &lt;code&gt;&lt;code&gt;Ctrl+3&lt;/code&gt;&lt;/code&gt; shortcut) you can now directly launch any of the Run or Debug configurations available in your workspace.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/run-debug-quickaccess.png" alt="run debug quickaccess" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="admonitionblock note"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-note" title="Note"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; For performance reasons, the extra &lt;strong&gt;Quick Access&lt;/strong&gt; entries are only visible if the &lt;code&gt;&lt;code&gt;org.eclipse.debug.ui&lt;/code&gt;&lt;/code&gt; bundle was already activated by some previous action in the workbench such as editing a launch configuration, or expanding the &lt;em&gt;Run As…​&lt;/em&gt; menus. &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="themes-and-styling"&gt;&lt;a class="anchor" href="#themes-and-styling"&gt;&lt;/a&gt;Themes and Styling&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="improved-view-menu-icon"&gt;&lt;a class="anchor" href="#improved-view-menu-icon"&gt;&lt;/a&gt;Improved View Menu Icon&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The icon used for the view menu has been improved. It is now crisp on high resolution displays and also looks much better in the dark theme.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Compare the old version at the top and the new version at the bottom:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/view_menu.png" alt="view menu" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="high-resolution-images-drawn-on-mac"&gt;&lt;a class="anchor" href="#high-resolution-images-drawn-on-mac"&gt;&lt;/a&gt;High resolution images drawn on Mac&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;On Mac, images and text are now drawn in high resolution during GC operations. You can see crisp images on high resolution displays in the editor rulers, forms, etc in Eclipse.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Compare the old version at the top and the new version at the bottom:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/hidpi-mac-old-behavior.png" alt="hidpi mac old behavior" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/hidpi-mac-new-behavior.png" alt="hidpi mac new behavior" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="table-tree-background-lines-shown-in-dark-theme-on-mac"&gt;&lt;a class="anchor" href="#table-tree-background-lines-shown-in-dark-theme-on-mac"&gt;&lt;/a&gt;Table/Tree background lines shown in dark theme on Mac&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In dark theme on Mac, the &lt;strong&gt;Table&lt;/strong&gt; and &lt;strong&gt;Trees&lt;/strong&gt; in Eclipse now show the alternating dark lines in the background when &lt;code&gt;&lt;code&gt;setLinesVisible(true)&lt;/code&gt;&lt;/code&gt; is set. Earlier they had a gray background even if line visibility was true.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Example of a Tree and Table in Eclipse with alternating dark lines in the background:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/dark-theme-alternating-lines.png" alt="dark theme alternating lines" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="equinox"&gt;&lt;a class="anchor" href="#equinox"&gt;&lt;/a&gt;Equinox&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When the &lt;strong&gt;Equinox OSGi Framework&lt;/strong&gt; is launched the installed bundles are activated according to their configured start-level. The bundles with lower start-levels are activated first. Bundles within the same start-level are activated sequentially from a single thread.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new configuration option &lt;code&gt;&lt;code&gt;equinox.start.level.thread.count&lt;/code&gt;&lt;/code&gt; has been added that enables the framework to start bundles within the same start-level in parallel. The default value is &lt;code&gt;&lt;code&gt;1&lt;/code&gt;&lt;/code&gt; which keeps the previous behavior of activating bundles from a single thread. Setting the value to &lt;code&gt;&lt;code&gt;0&lt;/code&gt;&lt;/code&gt; enables parallel activation using a thread count equal to &lt;code&gt;&lt;code&gt;Runtime.getRuntime().availableProcessors()&lt;/code&gt;&lt;/code&gt;. Setting the value to a number greater than &lt;code&gt;&lt;code&gt;1&lt;/code&gt;&lt;/code&gt; will use the specified number as the thread count for parallel bundle activation.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The default is &lt;code&gt;&lt;code&gt;1&lt;/code&gt;&lt;/code&gt; because of the risk of possible deadlock when activating bundles in parallel. Extensive testing must be done on the set of bundle installed in the framework before considering enabling this option in a product.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="java-developement-tools-jdt"&gt;&lt;a class="anchor" href="#java-developement-tools-jdt"&gt;&lt;/a&gt;Java Developement Tools (JDT)&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-12-support"&gt;&lt;a class="anchor" href="#java-12-support"&gt;&lt;/a&gt;Java 12 Support&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="change-project-compliance-and-jre-to-12"&gt;&lt;a class="anchor" href="#change-project-compliance-and-jre-to-12"&gt;&lt;/a&gt;Change project compliance and JRE to 12&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A quick fix &lt;strong&gt;Change project compliance and JRE to 12&lt;/strong&gt; is provided to change the current project to be compatible with Java 12.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/quickfix-change-compliance-12.png" alt="quickfix change compliance 12" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="enable-preview-features"&gt;&lt;a class="anchor" href="#enable-preview-features"&gt;&lt;/a&gt;Enable preview features&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Preview features in Java 12 can be enabled using &lt;strong&gt;Preferences &amp;gt; Java &amp;gt; Compiler &amp;gt; Enable preview features&lt;/strong&gt; option. The problem severity of these preview features can be configured using the &lt;strong&gt;Preview features with severity level&lt;/strong&gt; option.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/enable-preview.png" alt="enable preview" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="set-enable-preview-features"&gt;&lt;a class="anchor" href="#set-enable-preview-features"&gt;&lt;/a&gt;Set Enable preview features&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A quick fix &lt;strong&gt;Configure problem severity&lt;/strong&gt; is provided to update the problem severity of preview features in Java 12.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/quickfix-configure-severity-12.png" alt="quickfix configure severity 12" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="add-default-case-to-switch-statement"&gt;&lt;a class="anchor" href="#add-default-case-to-switch-statement"&gt;&lt;/a&gt;Add default case to switch statement&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A quick fix &lt;strong&gt;Add &amp;apos;default&amp;apos; case&lt;/strong&gt; is provided to add default case to a enhanced switch statement in Java 12.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/quickfix-default-switch-statement.png" alt="quickfix default switch statement" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="add-missing-case-statements-to-switch-statement"&gt;&lt;a class="anchor" href="#add-missing-case-statements-to-switch-statement"&gt;&lt;/a&gt;Add missing case statements to switch statement&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A quick fix &lt;strong&gt;Add missing case statements&lt;/strong&gt; is provided for a enhanced switch statement in Java 12.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/quickfix-missing-case-switch-statement.png" alt="quickfix missing case switch statement" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="add-default-case-to-switch-expression"&gt;&lt;a class="anchor" href="#add-default-case-to-switch-expression"&gt;&lt;/a&gt;Add default case to switch expression&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A quick fix &lt;strong&gt;Add &amp;apos;default&amp;apos; case&lt;/strong&gt; is provided to add default case to a switch expression.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/quickfix-default-switch-expression.png" alt="quickfix default switch expression" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="add-missing-case-statements-to-switch-expression"&gt;&lt;a class="anchor" href="#add-missing-case-statements-to-switch-expression"&gt;&lt;/a&gt;Add missing case statements to switch expression&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A quick fix &lt;strong&gt;Add missing case statements&lt;/strong&gt; is provided for switch expressions.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/quickfix-missing-case-switch-expression.png" alt="quickfix missing case switch expression" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="format-whitespaces-in-switch"&gt;&lt;a class="anchor" href="#format-whitespaces-in-switch"&gt;&lt;/a&gt;Format whitespaces in &amp;apos;switch&amp;apos;&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As Java 12 introduced some new features into the &lt;code&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/code&gt; construct, the formatter profile has some new settings for it. The settings allow you to control spaces around the arrow operator (separately for &lt;code&gt;&lt;code&gt;case&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;default&lt;/code&gt;&lt;/code&gt;) and around commas in a multi-value case.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The settings can be found in the &lt;strong&gt;Profile Editor (Preferences &amp;gt; Java &amp;gt; Code Style &amp;gt; Formatter &amp;gt; Edit…​)&lt;/strong&gt; under the &lt;strong&gt;White space &amp;gt; Control statements &amp;gt; &amp;apos;switch&amp;apos;&lt;/strong&gt; subsection.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/formatter-switch.png" alt="formatter switch" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="split-switch-case-labels"&gt;&lt;a class="anchor" href="#split-switch-case-labels"&gt;&lt;/a&gt;Split Switch Case Labels&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As Java 12 introduced the ability to group multiple &lt;code&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/code&gt; case labels into a single case expression, a quick assist is provided that allows these grouped labels to be split into separate case statements.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/split-switch-case-labels.png" alt="split switch case labels" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-editor"&gt;&lt;a class="anchor" href="#java-editor"&gt;&lt;/a&gt;Java Editor&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="show-method-parameter-names-on-code-as-code-minings"&gt;&lt;a class="anchor" href="#show-method-parameter-names-on-code-as-code-minings"&gt;&lt;/a&gt;Show method parameter names on code as code minings&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the &lt;strong&gt;Java &amp;gt; Editor &amp;gt; Code Mining&lt;/strong&gt; preferences, you can now enable the &lt;strong&gt;Show parameter names&lt;/strong&gt; option. This will show the parameter names as code minings in method or constructor calls, for cases where the resolution may not be obvious for a human reader.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For example, the code mining will be shown if the argument name in the method call is not an exact match of the parameter name or if the argument name doesn’t contain the parameter name as a substring.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/parameter-name-codeminings.png" alt="parameter name codeminings" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="show-number-of-implementations-of-methods-as-code-minings"&gt;&lt;a class="anchor" href="#show-number-of-implementations-of-methods-as-code-minings"&gt;&lt;/a&gt;Show number of implementations of methods as code minings&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the &lt;strong&gt;Java &amp;gt; Editor &amp;gt; Code Mining&lt;/strong&gt; preferences, selecting &lt;strong&gt;Show implementations with the Show References (including implementations) for → Methods&lt;/strong&gt; option now shows implementations of methods.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/method-implementation-codeminings.png" alt="method implementation codeminings" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Clicking on method implementations brings up the &lt;strong&gt;Search&lt;/strong&gt; view that shows all implementations of the method in sub-types.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/method-implementation-codeminings-click.png" alt="method implementation codeminings click" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="open-single-implementation-reference-in-editor-from-code-mining"&gt;&lt;a class="anchor" href="#open-single-implementation-reference-in-editor-from-code-mining"&gt;&lt;/a&gt;Open single implementation/reference in editor from code mining&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When the &lt;strong&gt;Java &amp;gt; Editor &amp;gt; Code Mining&lt;/strong&gt; preferences are enabled and a single implementation or reference is shown, moving the cursor over the annotation and using &lt;strong&gt;Ctrl+Click&lt;/strong&gt; will open the editor and display the single implementation or reference.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/ctrlclickimpl.png" alt="ctrlclickimpl" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="additional-quick-fixes-for-service-provider-constructors"&gt;&lt;a class="anchor" href="#additional-quick-fixes-for-service-provider-constructors"&gt;&lt;/a&gt;Additional quick fixes for service provider constructors&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Appropriate quick fixes are offered when a service defined in a &lt;code&gt;&lt;code&gt;module-info.java&lt;/code&gt;&lt;/code&gt; file has a service provider implementation whose no-arg constructor is not visible, or is non-existent.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/service-provider-create-constructor.png" alt="service provider create constructor" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/service-provider-change-constructor-visibility.png" alt="service provider change constructor visibility" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="template-to-create-switch-labeled-statement-and-switch-expressions"&gt;&lt;a class="anchor" href="#template-to-create-switch-labeled-statement-and-switch-expressions"&gt;&lt;/a&gt;Template to create Switch Labeled Statement and Switch Expressions&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;strong&gt;Java Editor&lt;/strong&gt; now offers new templates for the creation of switch labeled statements and switch expressions. On a switch statement, three new templates: &lt;strong&gt;switch labeled statement&lt;/strong&gt;, &lt;strong&gt;switch case expression&lt;/strong&gt; and &lt;strong&gt;switch labeled expression&lt;/strong&gt; are available as shown below. These new templates are available on Java projects having compliance level of Java 12 or above.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/switch_labeled_statement.png" alt="switch labeled statement" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/switch_case_expression.png" alt="switch case expression" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/switch_labeled_expression.png" alt="switch labeled expression" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If &lt;strong&gt;switch&lt;/strong&gt; is being used as an expression, then only &lt;strong&gt;switch case expression&lt;/strong&gt; and &lt;strong&gt;switch labeled expression&lt;/strong&gt; templates are available as shown below:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/switch_expression_templates.png" alt="switch expression templates" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-views-and-dialogs"&gt;&lt;a class="anchor" href="#java-views-and-dialogs"&gt;&lt;/a&gt;Java Views and Dialogs&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="enable-comment-generation-in-modules-and-packages"&gt;&lt;a class="anchor" href="#enable-comment-generation-in-modules-and-packages"&gt;&lt;/a&gt;Enable comment generation in modules and packages&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;An option is now available to enable/disable the comment generation while creating &lt;code&gt;&lt;code&gt;module-info.java&lt;/code&gt;&lt;/code&gt; or &lt;code&gt;&lt;code&gt;package-info.java&lt;/code&gt;&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/module-info-comment-generation-check-box.png" alt="module info comment generation check box" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/package-info-comment-generation-checkbox.png" alt="package info comment generation checkbox" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="improved-create-getter-and-setter-quick-assist"&gt;&lt;a class="anchor" href="#improved-create-getter-and-setter-quick-assist"&gt;&lt;/a&gt;Improved &amp;apos;create getter and setter&amp;apos; quick assist&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The quick assist for creating getter and setter methods from fields no longer forces you to create both.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/getter-setter-dialog-new.png" alt="getter setter dialog new" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="quick-fix-to-open-all-required-closed-projects"&gt;&lt;a class="anchor" href="#quick-fix-to-open-all-required-closed-projects"&gt;&lt;/a&gt;Quick fix to open all required closed projects&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A quick fix to open all required closed projects is now available in the &lt;strong&gt;Problems&lt;/strong&gt; view.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/quickfix-open-missing-projects-problem-view.png" alt="quickfix open missing projects problem view" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/quickfix-open-missing-projects.png" alt="quickfix open missing projects" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="new-ui-for-configuring-module-dependencies"&gt;&lt;a class="anchor" href="#new-ui-for-configuring-module-dependencies"&gt;&lt;/a&gt;New UI for configuring Module Dependencies&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;strong&gt;Java Build Path&lt;/strong&gt; configuration now has a new tab &lt;strong&gt;Module Dependencies&lt;/strong&gt;, which will gradually replace the options previously hidden behind the &lt;strong&gt;Is Modular&lt;/strong&gt; node on other tabs of this dialog. The new tab provides an intuitive way for configuring all those module-related options for which Java 9 had introduced new command line options like &lt;code&gt;&lt;code&gt;--limit-modules&lt;/code&gt;&lt;/code&gt; etc.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/module-dependencies-cropped.png" alt="module dependencies cropped" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The dialog focuses on how to build one Java Project, here &amp;quot;org.greetings&amp;quot;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Below this focus module, the left hand pane shows all modules that participate in the build, where decorations A and S mark automatic modules and system modules, respectively. The extent of system modules (from JRE) can be modified with the &lt;strong&gt;Add System Module…​&lt;/strong&gt; and &lt;strong&gt;Remove&lt;/strong&gt; buttons (corresponds to &lt;code&gt;&lt;code&gt;--add-modules&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;--limit-modules&lt;/code&gt;&lt;/code&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When a module is selected in the left hand pane, the right hand pane allows to configure the following properties for this module:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;strong&gt;Read Module:&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select additional modules that should be accessible from the selected module (corresponds to &lt;code&gt;&lt;code&gt;--add-reads&lt;/code&gt;&lt;/code&gt;)&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;strong&gt;Expose Package:&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select additional packages to be exposed (&amp;quot;exports&amp;quot; or &amp;quot;opens&amp;quot;) from the selected module (corresponds to &lt;code&gt;&lt;code&gt;--add-exports&lt;/code&gt;&lt;/code&gt; or &lt;code&gt;&lt;code&gt;--add-opens&lt;/code&gt;&lt;/code&gt;)&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;strong&gt;Patch with:&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Add more packages and classes to the selected module (corresponds to &lt;code&gt;&lt;code&gt;--patch-module&lt;/code&gt;&lt;/code&gt;)&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-compiler"&gt;&lt;a class="anchor" href="#java-compiler"&gt;&lt;/a&gt;Java Compiler&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="experimental-java-index-retired"&gt;&lt;a class="anchor" href="#experimental-java-index-retired"&gt;&lt;/a&gt;Experimental Java index retired&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Eclipse 4.7 introduced a new experimental Java index which was disabled by default.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Due to lack of resources to properly support all Java 9+ language changes, this index is not available anymore starting with Eclipse 4.12.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The preference to enable it in &lt;strong&gt;Preferences &amp;gt; Java&lt;/strong&gt; is removed and the old index will be always used.&lt;/p&gt; &lt;/div&gt; &lt;div class="admonitionblock note"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-note" title="Note"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; &lt;strong&gt;Preferences &amp;gt; Java &amp;gt; Rebuild Index&lt;/strong&gt; button can be used to delete the existing index files and free disk space. &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="debug"&gt;&lt;a class="anchor" href="#debug"&gt;&lt;/a&gt;Debug&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="run-to-line-on-ctrl-alt-click-in-annotation-ruler"&gt;&lt;a class="anchor" href="#run-to-line-on-ctrl-alt-click-in-annotation-ruler"&gt;&lt;/a&gt;&amp;apos;Run to Line&amp;apos; on Ctrl+Alt+Click in annotation ruler&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new shortcut, &lt;strong&gt;Ctrl+Alt+Click&lt;/strong&gt;, has been added to the annotation ruler that will invoke the &lt;strong&gt;&amp;apos;Run to Line&amp;apos;&lt;/strong&gt; command and take the program execution to the line of invocation.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/run-to-line.png" alt="run to line" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="content-assist-in-debug-shell"&gt;&lt;a class="anchor" href="#content-assist-in-debug-shell"&gt;&lt;/a&gt;Content assist in Debug Shell&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Content assist (&lt;strong&gt;Ctrl+Space&lt;/strong&gt;) support is now available in the &lt;strong&gt;Debug Shell&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/content-assist-debug-shell.png" alt="content assist debug shell" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="clear-java-stack-trace-console-usage-hint-on-first-edit"&gt;&lt;a class="anchor" href="#clear-java-stack-trace-console-usage-hint-on-first-edit"&gt;&lt;/a&gt;Clear Java Stack Trace Console usage hint on first edit&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;strong&gt;Java Stack Trace Console&lt;/strong&gt; shows a usage hint when opened the first time. This message is now automatically removed when the user starts typing or pasting a stack trace.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/jstc-initial-clear.png" alt="jstc initial clear" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="lambda-variable-names-shown-in-variables-view"&gt;&lt;a class="anchor" href="#lambda-variable-names-shown-in-variables-view"&gt;&lt;/a&gt;Lambda variable names shown in Variables view&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Lambda variable names are now shown in the &lt;strong&gt;Variables&lt;/strong&gt; view while debugging projects in the workspace.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.12/images/lambda-variables-view.png" alt="lambda variables view" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="jdt-developers"&gt;&lt;a class="anchor" href="#jdt-developers"&gt;&lt;/a&gt;JDT Developers&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="support-for-new-javadoc-tags"&gt;&lt;a class="anchor" href="#support-for-new-javadoc-tags"&gt;&lt;/a&gt;Support for new Javadoc tags&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The following Javadoc tags are now supported by the compiler and auto-complete.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Tags introduced in JDK 8:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;@apiNote&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;@implSpec&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;@implNote&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Tags introduced in JDK 9:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;@index&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;@hidden&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;@provides&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;@uses&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Tags introduced in JDK 10:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;@summary&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="and-more"&gt;&lt;a class="anchor" href="#and-more"&gt;&lt;/a&gt;And more…​&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find more noteworthy updates in on &lt;a href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.12.0.Final.html"&gt;this page&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-next"&gt;&lt;a class="anchor" href="#what-is-next"&gt;&lt;/a&gt;What is next?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Having JBoss Tools 4.12.0 and Red Hat CodeReady Studio 12.12 out we are already working on the next release for Eclipse 2019-09.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enjoy!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Jeff Maury&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/pTGdBGk6__E" height="1" width="1" alt=""/&gt;</content><summary>JBoss Tools 4.12.0 and Red Hat CodeReady Studio 12.12 for Eclipse 2019-06 are here waiting for you. Check it out! Installation Red Hat CodeReady Studio comes with everything pre-bundled in its installer. Simply download it from our Red Hat CodeReady product page and run it like this: java -jar codereadystudio-&lt;installername&gt;.jar JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio require a bit more: This release requires at least Eclipse 4.12 (2019-06) but we recommend using the latest Eclipse 4.12 2019-06 JEE Bundle since then you get most of the dependencies preinstalled. Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under "JBoss Tools" or...</summary><dc:creator>jeffmaury</dc:creator><dc:date>2019-07-08T00:00:00Z</dc:date><feedburner:origLink>https://tools.jboss.org/blog/12.12.0.ga.html</feedburner:origLink></entry></feed>
